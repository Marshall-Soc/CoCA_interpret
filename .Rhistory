}
} else {
stop("lavaan ERROR: sampling.weights.normalization should be total, group or none.")
}
}
# block.labels
block.label <- character(0L)
if(length(group.label) > 0L) {
block.label <- group.label
} else if(length(level.label) > 0L) {
block.label <- level.label
} else if(length(group.label) > 0L &&
length(level.label) > 0L) {
block.label <- paste(group.label,
level.label, sep = ".")
}
lavData2 <- new("lavData2",
data.type       = "full",
ngroups         = ngroups,
group           = group,
nlevels         = nlevels,
cluster         = cluster,
group.label     = group.label,
level.label     = level.label,
block.label     = block.label,
std.ov          = std.ov,
nobs            = nobs,
norig           = norig,
ov.names        = ov.names,
ov.names.x      = ov.names.x,
ov.names.l      = ov.names.l,
#ov.types        = ov.types,
#ov.idx          = ov.idx,
ordered         = as.character(ordered),
weights         = weights,
sampling.weights = sampling.weights,
ov              = ov,
case.idx        = case.idx,
missing         = missing,
X               = X,
eXo             = eXo,
Mp              = Mp,
Rp              = Rp,
Lp              = Lp
)
lavData2
}
fit2 <- lavCor2(blog.data[c(vars,"group")], output = "fit", group = "group",
sample.cov = list(`1`=cov.all,
`2`=cov.all,
`3`=cov.all,
`4`=cov.all,
`5`=cov.all))
rm(lav_cor_output, lab_data_full, lavCor2,lavData2,lavData22)
rm(lav_data_full)
fit2 <- lavCor(blog.data[c(vars,"group")], output = "fit", group = "group",
sample.cov = list(`1`=cov.all,
`2`=cov.all,
`3`=cov.all,
`4`=cov.all,
`5`=cov.all,
`6`=cov.all))
summary(fit2)
fit2 <- lavCor(blog.data[c(vars,"group")], output = "fit", group = "group",
sample.cov = list(cov.all))
summary(fit2)
fit2 <- lavCor(blog.data[c(vars,"group")], output = "fit", group = "group",
sample.cov = list(cov.all,cov.all,cov.all,cov.all,cov.all))
summary(fit2)
fit1 <- lavCor(blog.data[c(vars,"group")], output = "lavaan", group = "group")
summary(fit1)
AIC(fit1)
fit1 <- lavCor(blog.data[c(vars,"group")], output = "fit", group = "group", estimator = "ML")
summary(fit1)
AIC(fit1)
fit2 <- lavCor(blog.data[c(vars,"group")], output = "fit", group = "group",
estimator = "ML", sample.cov = list(cov.all,cov.all,cov.all,cov.all,cov.all))
summary(fit2)
list(cov.all,cov.all,cov.all,cov.all,cov.all)
AIC(fit2)
fit2 <- lavCor(blog.data[c(vars,"group")], output = "fit", group = "group",
estimator = "ML", sample.cov = cov.all)
summary(fit2)
fit2 <- lavCor(blog.data[c(vars,"group")], output = "fit", group = "group",
estimator = "ML", sample.cov = list(cov.all))
summary(fit2)
fit2 <- lavCor(blog.data[c(vars,"group")], output = "fit", estimator = "ML")
summary(fit2)
AIC(fit2)
fit2 <- lavCor(blog.data[c(vars)], output = "fit", estimator = "ML")
summary(fit2)
AIC(fit2)
model <- 'white_pole ~ man_pole
white_pole ~ good_pole
man_pole ~ white_pole
man_pole ~ good_pole
good_pole ~ white_pol
good_pol2 ~ man_pole
white_pole ~~ man_pole
white_pole ~~ good_pole
man_pole ~~ good_pole
'
temp <- sem(model, data = blog.data, group = "group")
model <- 'white_pole ~ man_pole
white_pole ~ good_pole
man_pole ~ white_pole
man_pole ~ good_pole
good_pole ~ white_pol
good_pole ~ man_pole
white_pole ~~ man_pole
white_pole ~~ good_pole
man_pole ~~ good_pole
'
temp <- sem(model, data = blog.data, group = "group")
model <- 'white_pole ~ man_pole
white_pole ~ good_pole
man_pole ~ white_pole
man_pole ~ good_pole
good_pole ~ white_pole
good_pole ~ man_pole
white_pole ~~ man_pole
white_pole ~~ good_pole
man_pole ~~ good_pole
'
temp <- sem(model, data = blog.data, group = "group")
summary(temp)
temp <- sem(model, data = blog.data, group = "group",
sample.cov = list(cov.all,cov.all,cov.all,cov.all,cov.all))
summary(temp)
model <- 'white_pole ~ man_pole + good_pole + influential_pole + young_pole
man_pole ~ white_pole + good_pole + influential_pole + young_pole
good_pole ~ white_pole + man_pole + influential_pole + young_pole
influential_pole ~ white_pole + man_pole + good_pole + young_pole
young_pole ~ white_pole + man_pole + good_pole + influential_pole
white_pole ~~ man_pole
white_pole ~~ good_pole
white_pole ~~ influential_pole
white_pole ~~ young_pole
man_pole ~~ good_pole
man_pole ~~ influential_pole
man_pole ~~ young_pole
good_pole ~~ influential_pole
good_pole ~~ young_pole
influential_pole ~~ young_pole
'
temp <- sem(model, data = blog.data, group = "group",
sample.cov = list(cov.all,cov.all,cov.all,cov.all,cov.all))
summary(temp)
AIC(temp)
model <- 'white_pole ~~ man_pole
white_pole ~~ good_pole
white_pole ~~ influential_pole
white_pole ~~ young_pole
man_pole ~~ good_pole
man_pole ~~ influential_pole
man_pole ~~ young_pole
good_pole ~~ influential_pole
good_pole ~~ young_pole
influential_pole ~~ young_pole
'
temp <- sem(model, data = blog.data, group = "group",
sample.cov = list(cov.all,cov.all,cov.all,cov.all,cov.all))
summary(temp)
list(cov.all,cov.all,cov.all,cov.all,cov.all)
temp <- sem(data = blog.data, group = "group",
sample.cov = list(cov.all,cov.all,cov.all,cov.all,cov.all))
model <- 'white_pole ~~ man_pole
white_pole ~~ good_pole
white_pole ~~ influential_pole
white_pole ~~ young_pole
man_pole ~~ good_pole
man_pole ~~ influential_pole
man_pole ~~ young_pole
good_pole ~~ influential_pole
good_pole ~~ young_pole
influential_pole ~~ young_pole
'
temp <- sem(model, data = blog.data, group = "group", group.equal = )
summary(temp)
AIC(temp)
temp <- sem(model, data = blog.data, group = "group", sample.cov = cov.all)
summary(temp)
AIC(temp)
temp <- cfa(model, data = blog.data, group = "group")
summary(temp)
temp <- cfa(model, data = blog.data, group = "group", sample.cov = cov.all)
summary(temp)
AIC(temp)
temp <- cfa(model, data = blog.data, group = "group",
sample.cov = list(cov.all,
cov.all,
cov.all,
cov.all,
cov.all))
summary(temp)
AIC(temp)
temp <- cfa(model, data = blog.data, group = "group", group.equal = c("residual.covariances"))
summary(temp)
AIC(temp)
temp <- cfa(model, data = blog.data, group = "group", group.equal = c("residual"))
summary(temp)
AIC(temp)
temp <- cfa(model, data = blog.data, group = "group",
group.equal = c("residuals","residual.covariances"))
summary(temp)
AIC(temp)
fit.diff <- cfa(model, data = blog.data, group = "group",
group.equal = c("residuals","residual.covariances"))
summary(fit.diff)
fit.same <- cfa(model, data = blog.data, group = "group",
group.equal = c("residuals","residual.covariances"))
summary(fit.same)
lavTestLRT(fit.diff,fit.same)
fit.diff <- cfa(model, data = blog.data, group = "group")
summary(fit.diff)
fit.same <- cfa(model, data = blog.data, group = "group",
group.equal = c("residuals","residual.covariances"))
summary(fit.same)
lavTestLRT(fit.diff,fit.same)
lavTestLRT(fit.same,fit.diff,)
lavTestLRT(fit.same,fit.diff)
lavTestLRT(fit.same,fit.diff)
lrtest(fit.same,fit.diff)
lmtest::lrtest(fit.same,fit.diff)
-2*-87195
fitMeasures(fit.diff,fit.diff2)
fit.diff2 <- cfa(model, data = blog.data, group = "group2")
fit.diff3 <- cfa(model, data = blog.data, group = "group3")
fit.diff4 <- cfa(model, data = blog.data, group = "group4")
blog.data |> colnames()
blog.data[,c("group2.x","group2.y")] <- NULL
blog.data <- left_join(blog.data, cca.group2, by = c("article_id" = "rowid"))
fit.diff2 <- cfa(model, data = blog.data, group = "group2")
fit.diff3 <- cfa(model, data = blog.data, group = "group3")
fit.diff4 <- cfa(model, data = blog.data, group = "group4")
fitMeasures(fit.diff,fit.diff2)
fit.diff
summary(fit.diff,fit.diff2)
summary(fit.diff)
summary(fit.diff, fitmeasures = T)
fitMeasures(fit.diff)
fitMeasures(fit.diff2)
fitMeasures(fit.diff)[,c("aic","bic")]
temp <- fitMeasures(fit.diff)
temp
as.data.frame(temp)
as.matrix(temp)
as.numeric(temp)
temp <- as.data.frame(fitMeasures(fit.diff))["aic",]
temp
as.data.frame(fitMeasures(fit.diff))[c("aic","bic"),]
for (i in list(fit.diff,fit.diff2,fit.diff3,fit.diff4)) {
as.data.frame(fitMeasures(i))[c("aic","bic"),] |>
print()
}
for (i in list(fit.diff2,fit.diff3,fit.diff4,fit.diff)) {
as.data.frame(fitMeasures(i))[c("aic","bic"),] |>
print()
}
df.people.full <- person_entity(blog.data$documents)
df.temp.full <- df.people.full
# Replace Curly Apostrophes
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, "’", "'") )
}
# Replace Periods
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed("."), "") )
}
# Replace Apostrophes ESS
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed("'s"), "") )
}
# To replace names
cb <- readxl::read_excel("data/ner_cleaning.xlsx",
sheet = "cb")
# Bad names
bad.names <- readxl::read_excel("data/ner_cleaning.xlsx",
sheet = "bad")
# Replace "
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed(' "'), '') )
}
# Replace ”
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed('”'), '') )
}
# Replace (
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed('('), '') )
}
# Replace )
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed(')'), '') )
}
# Replace double space with one
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, "\\s+", " ") )
}
for(i in 1:nrow(bad.names) ){
rmv <- paste0("^\\b", bad.names$bad[i],"\\b$" )
print(rmv)
df.temp.full <- lapply(df.temp.full, function(x) str_remove_all(x, rmv) )
}
for(j in 1:nrow(cb) ){
pattern <- cb[j, 2, drop = TRUE]
replace <- cb[j, 1, drop = TRUE]
pat <- paste0("^\\b", pattern,"\\b$" )
df.temp.full <- lapply(df.temp.full, function(x) str_replace_all(x, pat, replace) )
}
df.temp.full <- lapply(df.temp.full, setdiff, "")
# Replace double space with one
# [[13142]]
# character(0)
df.temp.full <- lapply(df.temp.full, function(x) if(identical(x, character(0))) NA_character_ else x)
df.temp.full <- df.temp.full %>%
melt() %>%
as_tibble() %>%
rename(named_entity = value, article_id = L1)  %>%
mutate(article_id = as.character(article_id) ) %>%
mutate_if(grepl('Obama',.), ~replace(., grepl('Obama', .), "Barack Obama") ) %>%
mutate_if(grepl('McCain',.), ~replace(., grepl('McCain', .), "John McCain") ) %>%
mutate_if(grepl('Hillary',.), ~replace(., grepl('Hillary', .), "Hillary Clinton") ) %>%
group_by(article_id) %>%
add_count(name = "n_ppl_article") %>%
mutate(all_name = paste0(named_entity, collapse = ";") )
blog.data2 <- blog.data %>%
tibble::rownames_to_column(var = "article_id") %>%
left_join(df.temp.full)
blog.data2 <- blog.data %>%
# tibble::rownames_to_column(var = "article_id") %>%
left_join(df.temp.full)
colnames(blog.data)
colnames(df.temp.full)
blog.data2 <- left_join(blog.data, df.temp.full, by = "article_id")
colnames(blog.data2)
blog.data2 <- blog.data2 %>%
mutate(mccain = ifelse(str_detect(all_name, "McCain"), TRUE, FALSE) ) %>%
mutate(obama = ifelse(str_detect(all_name, "Obama"), TRUE, FALSE) ) %>%
mutate(biden = ifelse(str_detect(all_name, "Biden"), TRUE, FALSE) ) %>%
mutate(palin = ifelse(str_detect(all_name, "Palin"), TRUE, FALSE ) ) %>%
mutate(clinton = ifelse(str_detect(all_name, "Hillary"), TRUE, FALSE) ) %>%
mutate(bush = ifelse(str_detect(all_name, "Bush"), TRUE, FALSE) ) %>%
mutate(named_entity = case_when(named_entity == "John"    & mccain==TRUE ~ "John McCain",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Barry"   & obama==TRUE ~ "Barack Obama",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Joe"     & biden==TRUE ~ "Joe Biden",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Sarah"   & palin==TRUE ~ "Sarah Palin",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Hillary" & clinton==TRUE ~ "Hillary Clinton",  TRUE ~ named_entity))
# Blogs
# blog.data <- readtext("https://uclspp.github.io/datasets/data/poliblogs2008.zip")
blog.data   <- readRDS("data/blog_data.rds") # This contains all of the variables
temp <- blog.data[,c("article_id")]
blog.data2 <- temp %>%
# tibble::rownames_to_column(var = "article_id") %>%
left_join(df.temp.full)
temp <- blog.data[,c("article_id","documents")]
blog.data2 <- temp %>%
# tibble::rownames_to_column(var = "article_id") %>%
left_join(df.temp.full)
colnames(blog.data2)
blog.data2 <- blog.data2 %>%
mutate(mccain = ifelse(str_detect(all_name, "McCain"), TRUE, FALSE) ) %>%
mutate(obama = ifelse(str_detect(all_name, "Obama"), TRUE, FALSE) ) %>%
mutate(biden = ifelse(str_detect(all_name, "Biden"), TRUE, FALSE) ) %>%
mutate(palin = ifelse(str_detect(all_name, "Palin"), TRUE, FALSE ) ) %>%
mutate(clinton = ifelse(str_detect(all_name, "Hillary"), TRUE, FALSE) ) %>%
mutate(bush = ifelse(str_detect(all_name, "Bush"), TRUE, FALSE) ) %>%
mutate(named_entity = case_when(named_entity == "John"    & mccain==TRUE ~ "John McCain",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Barry"   & obama==TRUE ~ "Barack Obama",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Joe"     & biden==TRUE ~ "Joe Biden",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Sarah"   & palin==TRUE ~ "Sarah Palin",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Hillary" & clinton==TRUE ~ "Hillary Clinton",  TRUE ~ named_entity))
cor(blog.data$n_ppl_article,blog.data2$n_ppl_article)
rm(blog.data2)
blog.data2 <- left_join(temp, df.temp.full, by = "article_id")
View(temp)
View(df.temp.full)
df.temp.full2 <- df.temp.full
View(df.temp.full2)
df.temp.full2 <- df.temp.full %>%
select(-named_entity) %>%
distinct()
df.temp.full <- df.temp.full %>%
select(-named_entity) %>%
distinct()
temp
colnames(temp)
blog.data2 <- temp %>%
# tibble::rownames_to_column(var = "article_id") %>%
left_join(df.temp.full)
cor(blog.data2$n_ppl_article,blog.data$n_ppl_article)
blog.data2 <- blog.data2 %>%
mutate(mccain = ifelse(str_detect(all_name, "McCain"), TRUE, FALSE) ) %>%
mutate(obama = ifelse(str_detect(all_name, "Obama"), TRUE, FALSE) ) %>%
mutate(biden = ifelse(str_detect(all_name, "Biden"), TRUE, FALSE) ) %>%
mutate(palin = ifelse(str_detect(all_name, "Palin"), TRUE, FALSE ) ) %>%
mutate(clinton = ifelse(str_detect(all_name, "Hillary"), TRUE, FALSE) ) %>%
mutate(bush = ifelse(str_detect(all_name, "Bush"), TRUE, FALSE) ) %>%
mutate(named_entity = case_when(named_entity == "John"    & mccain==TRUE ~ "John McCain",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Barry"   & obama==TRUE ~ "Barack Obama",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Joe"     & biden==TRUE ~ "Joe Biden",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Sarah"   & palin==TRUE ~ "Sarah Palin",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Hillary" & clinton==TRUE ~ "Hillary Clinton",  TRUE ~ named_entity))
df.temp.full <- df.people.full
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, "’", "'") )
}
# Replace Periods
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed("."), "") )
}
# Replace Apostrophes ESS
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed("'s"), "") )
}
# Replace "
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed(' "'), '') )
}
# Replace ”
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed('”'), '') )
}
# Replace (
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed('('), '') )
}
# Replace )
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, fixed(')'), '') )
}
# Replace double space with one
for(j in 1:length(bad.names) ){
df.temp.full <-  lapply(df.temp.full, function(x) str_replace_all(x, "\\s+", " ") )
}
for(i in 1:nrow(bad.names) ){
rmv <- paste0("^\\b", bad.names$bad[i],"\\b$" )
print(rmv)
df.temp.full <- lapply(df.temp.full, function(x) str_remove_all(x, rmv) )
}
for(j in 1:nrow(cb) ){
pattern <- cb[j, 2, drop = TRUE]
replace <- cb[j, 1, drop = TRUE]
pat <- paste0("^\\b", pattern,"\\b$" )
df.temp.full <- lapply(df.temp.full, function(x) str_replace_all(x, pat, replace) )
}
# Removes duplicate names *within* each list and blanks from cleaning
df.temp.full <- lapply(df.temp.full, setdiff, "")
# Replace double space with one
# [[13142]]
# character(0)
df.temp.full <- lapply(df.temp.full, function(x) if(identical(x, character(0))) NA_character_ else x)
df.temp.full <- df.temp.full %>%
melt() %>%
as_tibble() %>%
rename(named_entity = value, article_id = L1)  %>%
mutate(article_id = as.character(article_id) ) %>%
mutate_if(grepl('Obama',.), ~replace(., grepl('Obama', .), "Barack Obama") ) %>%
mutate_if(grepl('McCain',.), ~replace(., grepl('McCain', .), "John McCain") ) %>%
mutate_if(grepl('Hillary',.), ~replace(., grepl('Hillary', .), "Hillary Clinton") ) %>%
group_by(article_id) %>%
add_count(name = "n_ppl_article") %>%
mutate(all_name = paste0(named_entity, collapse = ";") )
blog.data2 <- temp %>%
# tibble::rownames_to_column(var = "article_id") %>%
left_join(df.temp.full)
blog.data2 <- blog.data2 %>%
mutate(mccain = ifelse(str_detect(all_name, "McCain"), TRUE, FALSE) ) %>%
mutate(obama = ifelse(str_detect(all_name, "Obama"), TRUE, FALSE) ) %>%
mutate(biden = ifelse(str_detect(all_name, "Biden"), TRUE, FALSE) ) %>%
mutate(palin = ifelse(str_detect(all_name, "Palin"), TRUE, FALSE ) ) %>%
mutate(clinton = ifelse(str_detect(all_name, "Hillary"), TRUE, FALSE) ) %>%
mutate(bush = ifelse(str_detect(all_name, "Bush"), TRUE, FALSE) ) %>%
mutate(named_entity = case_when(named_entity == "John"    & mccain==TRUE ~ "John McCain",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Barry"   & obama==TRUE ~ "Barack Obama",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Joe"     & biden==TRUE ~ "Joe Biden",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Sarah"   & palin==TRUE ~ "Sarah Palin",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Hillary" & clinton==TRUE ~ "Hillary Clinton",  TRUE ~ named_entity))
blog.data2 <- blog.data2 |>
distinct()
View(blog.data2)
blog.data2 <- temp %>%
# tibble::rownames_to_column(var = "article_id") %>%
left_join(df.temp.full)
blog.data2 <- blog.data2 %>%
mutate(mccain = ifelse(str_detect(all_name, "McCain"), TRUE, FALSE) ) %>%
mutate(obama = ifelse(str_detect(all_name, "Obama"), TRUE, FALSE) ) %>%
mutate(biden = ifelse(str_detect(all_name, "Biden"), TRUE, FALSE) ) %>%
mutate(palin = ifelse(str_detect(all_name, "Palin"), TRUE, FALSE ) ) %>%
mutate(clinton = ifelse(str_detect(all_name, "Hillary"), TRUE, FALSE) ) %>%
mutate(bush = ifelse(str_detect(all_name, "Bush"), TRUE, FALSE) ) %>%
mutate(named_entity = case_when(named_entity == "John"    & mccain==TRUE ~ "John McCain",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Barry"   & obama==TRUE ~ "Barack Obama",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Joe"     & biden==TRUE ~ "Joe Biden",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Sarah"   & palin==TRUE ~ "Sarah Palin",  TRUE ~ named_entity)) %>%
mutate(named_entity = case_when(named_entity == "Hillary" & clinton==TRUE ~ "Hillary Clinton",  TRUE ~ named_entity))
blog.data2 <- blog.data2 |>
select(-named_entity) |>
distinct()
cor(blog.data$n_ppl_article, blog.data2$n_ppl_article)
cor(blog.data$mccain, blog.data2$n_ppl_article)
cor(blog.data$mccain, blog.data2$mccain)
cor(blog.data$palin, blog.data2$palin)
cor(blog.data$clinton, blog.data2$clinton)
cor(blog.data$bush, blog.data2$bush)
cor(blog.data$obama, blog.data2$obama)
cor(blog.data$biden, blog.data2$biden)
blog.data[blog.data$n_ppl_article != blog.data2$n_ppl_article, "n_ppl_article"]
blog.data2[blog.data2$n_ppl_article != blog.data$n_ppl_article, "n_ppl_article"]
identical(blog.data[blog.data$n_ppl_article != blog.data2$n_ppl_article, "n_ppl_article"], blog.data2[blog.data2$n_ppl_article != blog.data$n_ppl_article, "n_ppl_article"])
identical(blog.data[blog.data$n_ppl_article != blog.data2$n_ppl_article, "n_ppl_article"]-1, blog.data2[blog.data2$n_ppl_article != blog.data$n_ppl_article, "n_ppl_article"])
table(blog.data$blog)
